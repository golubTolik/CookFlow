import { describe, it, expect } from 'vitest'
import { mount } from '@vue/test-utils'

describe('filteredArticles computed', () => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const mockArticles = [
    { id: 1, title: '–ó–¥–æ—Ä–æ–≤–∞—è –µ–¥–∞', category: 1 },
    { id: 2, title: '–°—Ç–µ–π–∫-–º–∞—Å—Ç–µ—Ä', category: 2 },
    { id: 3, title: '–°–º—É–∑–∏-—Ä–µ—Ü–µ–ø—Ç—ã', category: 1 },
  ];

  it('–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —Å—Ç–∞—Ç—å–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', async () => {
    const { default: ArticlesSlide } = await import('@/components/Articles/ArticlesSlide.vue')
    const wrapper = mount(ArticlesSlide, { props: { articles: [...mockArticles] } } );
    
     // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    expect(wrapper.vm.filteredArticles).toEqual(mockArticles);

    // 2. –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 1
    await wrapper.setData({ 
      selectedCategory: {  id: 1,  icon: "ü•¶", title: "–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ" } 
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    expect(wrapper.vm.filteredArticles).toEqual([
      mockArticles[0],
      mockArticles[2]
    ]);

    // 3. –°–±—Ä–æ—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    await wrapper.setData({ selectedCategory: null });
    expect(wrapper.vm.filteredArticles).toEqual(mockArticles);
  });
});

describe('Header logout method', () => {

  it('–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', async () => {
    const { default: Header } = await import('@/components/Layout/Header.vue')

    // 1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const currentUser = { id: 1, name: 'Test User', email: 'test@example.com' };
    localStorage.setItem('currentUser', JSON.stringify(currentUser));
    localStorage.setItem('users', JSON.stringify([currentUser]));
    

    // 2. –ú–æ–Ω—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –Ω–∞—á–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
    const wrapper = mount(Header, {
      data() {
        return { currentUser };
      },
      global: {
        mocks: {
          $route: {
            path: '/'
          }
        }
      }
    });

    // 3. –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ logout
    wrapper.vm.logout();

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    // - currentUser –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å null
    expect(wrapper.vm.currentUser).toBeNull();
    
    // - currentUser —É–¥–∞–ª–µ–Ω –∏–∑ localStorage
    expect(localStorage.getItem('currentUser')).toBeNull();
    
    // - users –≤ localStorage –æ–±–Ω–æ–≤–ª–µ–Ω
    const users = JSON.parse(localStorage.getItem('users'));
    expect(users).toEqual([currentUser]);
    
    // - isMenuOpen —Å–±—Ä–æ—à–µ–Ω –≤ false
    expect(wrapper.vm.isMenuOpen).toBe(false);
  });
});

describe('AccountView.vue', () => {
  it('displays login message when user is not authenticated', async () => {
    const { default: AccountView } = await import('@/components/Pages/AccountView.vue')
    // –ú–æ–Ω—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
    const wrapper = mount(AccountView, {
      data() {
        return {
          userData: null, // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
          likedRecipes: [],
          favoriteRecipes: [],
          likedArticles: [],
          favoriteArticles: []
        }
      },
      global: {
        stubs: ['ListItem', 'ArticleItem'] // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      }
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = wrapper.find('div.text-center')
    expect(message.exists()).toBe(true)
    expect(message.text()).toContain('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
    expect(message.text()).toContain('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    expect(wrapper.find('section').exists()).toBe(false)
  })
})